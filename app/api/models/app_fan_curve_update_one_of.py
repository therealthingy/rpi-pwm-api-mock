# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.api.models.base_model_ import Model
from app.api import util


class AppFanCurveUpdateOneOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_time_changed=None):  # noqa: E501
        """AppFanCurveUpdateOneOf - a model defined in OpenAPI

        :param last_time_changed: The last_time_changed of this AppFanCurveUpdateOneOf.  # noqa: E501
        :type last_time_changed: datetime
        """
        self.openapi_types = {
            'last_time_changed': datetime
        }

        self.attribute_map = {
            'last_time_changed': 'lastTimeChanged'
        }

        self._last_time_changed = last_time_changed

    @classmethod
    def from_dict(cls, dikt) -> 'AppFanCurveUpdateOneOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppFanCurveUpdate_oneOf of this AppFanCurveUpdateOneOf.  # noqa: E501
        :rtype: AppFanCurveUpdateOneOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_time_changed(self):
        """Gets the last_time_changed of this AppFanCurveUpdateOneOf.

        Last time fan curve was updated (used for optimistic locking)  # noqa: E501

        :return: The last_time_changed of this AppFanCurveUpdateOneOf.
        :rtype: datetime
        """
        return self._last_time_changed

    @last_time_changed.setter
    def last_time_changed(self, last_time_changed):
        """Sets the last_time_changed of this AppFanCurveUpdateOneOf.

        Last time fan curve was updated (used for optimistic locking)  # noqa: E501

        :param last_time_changed: The last_time_changed of this AppFanCurveUpdateOneOf.
        :type last_time_changed: datetime
        """
        if last_time_changed is None:
            raise ValueError("Invalid value for `last_time_changed`, must not be `None`")  # noqa: E501

        self._last_time_changed = last_time_changed
