# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.web.api.models.base_model_ import Model
from app.web.api import util


class AppFanCurveAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, did=None):  # noqa: E501
        """AppFanCurveAllOf - a model defined in OpenAPI

        :param did: The did of this AppFanCurveAllOf.  # noqa: E501
        :type did: str
        """
        self.openapi_types = {
            'did': str
        }

        self.attribute_map = {
            'did': 'did'
        }

        self._did = did

    @classmethod
    def from_dict(cls, dikt) -> 'AppFanCurveAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AppFanCurve_allOf of this AppFanCurveAllOf.  # noqa: E501
        :rtype: AppFanCurveAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def did(self):
        """Gets the did of this AppFanCurveAllOf.

        Id of fan curve  # noqa: E501

        :return: The did of this AppFanCurveAllOf.
        :rtype: str
        """
        return self._did

    @did.setter
    def did(self, did):
        """Sets the did of this AppFanCurveAllOf.

        Id of fan curve  # noqa: E501

        :param did: The did of this AppFanCurveAllOf.
        :type did: str
        """
        if did is None:
            raise ValueError("Invalid value for `did`, must not be `None`")  # noqa: E501
        if did is not None and len(did) > 255:
            raise ValueError("Invalid value for `did`, length must be less than or equal to `255`")  # noqa: E501

        self._did = did
